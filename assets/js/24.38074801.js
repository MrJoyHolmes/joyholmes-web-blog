(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{486:function(t,e,v){"use strict";v.r(e);var r=v(2),n=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"axios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" axios")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("axios 常用语法:")]),e("br"),t._v("\naxios(config): 通用/最本质的发任意类型请求的方式"),e("br"),t._v("\naxios(url[, config]): 可以只指定 url 发 get 请求"),e("br"),t._v("\naxios.request(config): 等同于 axios(config)"),e("br"),t._v("\naxios.get(url[, config]): 发 get 请求"),e("br"),t._v("\naxios.delete(url[, config]): 发 delete 请求"),e("br"),t._v("\naxios.post(url[, data, config]): 发 post 请求"),e("br"),t._v("\naxios.put(url[, data, config]): 发 put 请求"),e("br"),t._v("\naxios.defaults.xxx: 请求的默认全局配置"),e("br"),t._v("\naxios.interceptors.request.use(): 添加请求拦截器"),e("br"),t._v("\naxios.interceptors.response.use(): 添加响应拦截器"),e("br"),t._v("\naxios.create([config]): 创建一个新的 axios(它没有下面的功能)"),e("br"),t._v("\naxios.Cancel(): 用于创建取消请求的错误对象"),e("br"),t._v("\naxios.CancelToken(): 用于创建取消请求的 token 对象"),e("br"),t._v("\naxios.isCancel(): 是否是一个取消请求的错误"),e("br"),t._v("\naxios.all(promises): 用于批量执行多个异步请求"),e("br"),t._v("\naxios.spread(): 用来指定接收所有成功数据的回调函数的方法")])]),t._v(" "),e("h2",{attrs:{id:"xhr-和-fetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xhr-和-fetch"}},[t._v("#")]),t._v(" xhr 和 fetch")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("功能点")]),t._v(" "),e("th",[t._v("XHR")]),t._v(" "),e("th",[t._v("Fetch")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("基本的请求能力")]),t._v(" "),e("td",[t._v("✅")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("基本的获取响应能力")]),t._v(" "),e("td",[t._v("✅")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("监控请求进度")]),t._v(" "),e("td",[t._v("✅")]),t._v(" "),e("td",[t._v("❌")])]),t._v(" "),e("tr",[e("td",[t._v("监控响应进度")]),t._v(" "),e("td",[t._v("✅")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("Service Worker中是否可用")]),t._v(" "),e("td",[t._v("❌")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("控制cookie的携带")]),t._v(" "),e("td",[t._v("❌")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("控制重定向")]),t._v(" "),e("td",[t._v("❌")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("请求取消")]),t._v(" "),e("td",[t._v("✅")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("自定义referrer")]),t._v(" "),e("td",[t._v("❌")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("流")]),t._v(" "),e("td",[t._v("❌")]),t._v(" "),e("td",[t._v("✅")])]),t._v(" "),e("tr",[e("td",[t._v("API风格")]),t._v(" "),e("td",[e("code",[t._v("Event")])]),t._v(" "),e("td",[e("code",[t._v("Promise")])])]),t._v(" "),e("tr",[e("td",[t._v("活跃度")]),t._v(" "),e("td",[t._v("停止更新")]),t._v(" "),e("td",[t._v("不断更新")])])])]),t._v(" "),e("h3",{attrs:{id:"chatgpt动态生成回答"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chatgpt动态生成回答"}},[t._v("#")]),t._v(" chatGPT动态生成回答")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("form.onsubmit = async (e) => {\n  e.preventDefault();\n  const content = textArea.value;\n  createUserContent('袁');\n  const robot = createRobotContent();\n  const resp = await fetch('http://myserver.com:7010/chat', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      content,\n    }),\n  });\n  // 流式读取\n  const reader = resp.body.getReader();\n  const decoder = new TextDecoder();\n  while (1) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    const txt = decoder.decode(value);\n    robot.append(txt);\n  }\n  robot.over();\n};\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);